name: CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  generate_projects_matrix:
    name: Generate projects matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v31
      with:
        # Newlines are better, but are currently unsupported (https://github.com/tj-actions/changed-files#known-limitation);
        # commas are equally safe for this project, though.
        separator: ","
        dir_names: true
    - id: generate-matrix
      run: echo ::set-output name=matrix::$(.github/workflows/generate-projects-matrix.sh ${{ steps.changed-files.outputs.all_changed_files }})
  check_code_formatting:
    runs-on: ubuntu-latest
    name: Check code formatting
    needs: generate_projects_matrix
    strategy:
      fail-fast: false
      matrix:
        cfg: ${{ fromJson(needs.generate_projects_matrix.outputs.matrix) }}
    if: ${{ needs.generate_projects_matrix.outputs.matrix != '[]' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --manifest-path=${{ matrix.cfg.port_manifest }} -- --check
  clippy_correctness_checks:
    runs-on: ubuntu-latest
    name: Clippy correctness checks
    needs: generate_projects_matrix
    strategy:
      fail-fast: false
      matrix:
        cfg: ${{fromJson(needs.generate_projects_matrix.outputs.matrix)}}
    if: ${{ needs.generate_projects_matrix.outputs.matrix != '[]' }}
    steps:
      - name: Install dev libraries
        run: sudo apt install libasound2-dev libudev-dev
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('*/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args:  --manifest-path=${{ matrix.cfg.port_manifest }} -- -W clippy::correctness -D warnings
